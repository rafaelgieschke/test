on: push
jobs:
  docker-macos:
    if: false
    runs-on: macos-12
    steps:
    - run: |
        vm_stat
        brew install docker colima
        colima start --cpu 3 --memory 12
        docker run ubuntu cat /proc/meminfo
        docker run ubuntu df -h
        vm_stat
        top
        exit
        brew install lima
        mkdir -p ~/.lima/_config
        echo '{"cpus": 3, "memory": "12GiB", "containerd": {"system": true, "user": false}}' > ~/.lima/_config/default.yaml
        limactl start
        lima cat /proc/cpuinfo
        lima nerdctl run ubuntu cat /proc/meminfo
        lima nerdctl run --privileged --rm tonistiigi/binfmt --install arm64
        exit
        brew install minikube hyperkit docker
        minikube config set cpus 3
        minikube config set memory 12g
        minikube start --driver=hyperkit --container-runtime=docker
        minikube kubectl get nodes
        eval "$(minikube docker-env)"
        docker info
        docker run ubuntu cat /etc/cpuinfo
        docker run ubuntu cat /etc/meminfo
  test:
    if: true
    runs-on: ubuntu-latest
    steps:
    - run: printf '%s\n' "$A"
      env:
        A: ${{fromJSON(format('[{0},{1}]', toJSON(github), toJSON(job)))}}
    - run: ls -laR /home || true
    - run: pwd -P; pwd
    - uses: actions/checkout@v3
    - run: id; pwd; pwd -P; sudo ls -laR /mnt; cat /mnt/DATALOSS_WARNING_README.txt; df -h; ls -la /dev; lsblk; ls; cat /proc/cpuinfo > cpuinfo.txt
    - uses: ./
      env:
        ele: fant
    - uses: actions/upload-artifact@HEAD
      with:
       path: cpuinfo.txt
    #- env:
    #    image: ghcr.io/${{github.repository}}:${{github.ref_name}}
    #  run: |
    #   docker login -u github -p ${{github.token}} "$image"
    #   docker build -t "$image" .
    #   docker push "$image"
    #- uses: ncipollo/release-action@v1
    #  with:
    #    artifacts: "Dockerfile"
    #    tag: ${{github.ref_name}}
    #    commit: ${{github.sha}}
    #- uses: marvinpinto/action-automatic-releases@latest
    #  with:
    #     repo_token: ${{github.token}}
    #     automatic_release_tag: ${{github.ref_name}}-nightly
    #     files: Dockerfile
    - uses: actions/github-script@v6
      with:
        script: |
          github.rest.git.updateRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            force: true,
            sha: context.sha,
            ref: "refs/tags/test2",
          }).catch(console.log)
    - uses: softprops/action-gh-release@v1
      with:
        files: Dockerfile
        tag_name: ${{github.ref_name}}-nightly
        prerelease: true
        target_commitish: ${{github.sha}}


